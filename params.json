{"name":"jQuery.ajaxRetry","tagline":"","body":"# jQuery.ajaxRetry\r\n\r\nThis plugin allows you to easily retry a failed ajax request while still allowing you to add callbacks via any of the normal options or deferreds.\r\njQuery.ajaxRetry is supported on all version of jQuery from 1.5 to 1.9.1.\r\n\r\n## Usage\r\n\r\n* **Boolean**\r\nIf you set this to `true`, your request will be retried until it successfully completes.  Be careful you don't DOS yourself here.\r\n```\r\n$.ajax({\r\n      shouldRetry: true\r\n});\r\n```\r\n\r\n* **Number**\r\nYou can provide a simple number and the request will be retried that many times.\r\n```\r\n$.ajax({\r\n      // Retry this request up to 2 times\r\n      shouldRetry: 2\r\n});\r\n```\r\n\r\n* **Function**\r\nPassing a function is the most flexible and powerful way to handle your retries.  A retry will occur if your function returns `true`, or if it\r\nreturns a `promise` that resolves to `true`.\r\n```\r\n$.ajax({\r\n      shouldRetry: function( jqXHR, retryCount, requestMethod ) {\r\n          // Retry only if the request method is POST and we have not retried this request yet.\r\n          return requestMethod === \"POST\" && retryCount === 0;\r\n      }\r\n});\r\n```\r\n\r\n  ```\r\n    $.ajax({\r\n      shouldRetry: function() {\r\n          // Always retry this request with a delay of 250ms between retries\r\n          return $.Deferred(function(dfr) {\r\n              setTimeout(function() {\r\n                  dfr.resolve(true);\r\n              }, 250);\r\n          }).promise()\r\n      }\r\n    });\r\n```\r\n\r\n## License\r\nCopyright (c) 2013 Daniel Herman, contributors Licensed under the MIT license.\r\n","google":"UA-38369144-1","note":"Don't delete this file! It's used internally to help with page regeneration."}